{"version":3,"sources":["assets/git-background.svg","styles/global.ts","pages/Dashboard/styles.ts","services/api.ts","assets/logo.svg","pages/Dashboard/index.tsx","pages/Repository/index.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["createGlobalStyle","git","Title","styled","h1","Form","form","shade","Repositories","div","Icondiv","api","axios","create","baseURL","Dashboard","useState","newRepo","setNewRepo","respositories","setRepositories","event","a","preventDefault","get","response","repository","data","src","logo","alt","onSubmit","placeholder","value","onChange","e","target","type","map","resposiroty","href","ownew","avatar_url","full_name","description","size","Repository","Routes","path","exact","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAAe,MAA0B,2CCI1BA,cAAf,4XAU8BC,G,wDCVhBC,EAAQC,IAAOC,GAAV,yIAWNC,EAAOF,IAAOG,KAAV,ijBAkCEC,YAAM,GAAK,YAQjBC,EAAeL,IAAOM,IAAV,ixBA8DZC,EAAUP,IAAOM,IAAV,2E,gBC7GLE,E,OAPHC,EAAMC,OAAO,CAEvBC,QAAS,2BCLI,MAA0B,iC,OCoF1BC,EA9Da,WAAM,IAAD,EAGDC,mBAAS,IAHR,mBAGxBC,EAHwB,KAGfC,EAHe,OAIUF,mBAAuB,IAJjC,mBAIxBG,EAJwB,KAITC,EAJS,iDAM/B,WAAmCC,GAAnC,iBAAAC,EAAA,6DAGCD,EAAME,iBAHP,SAMyBZ,EAAIa,IAAJ,gBAAiBP,IAN1C,OAMQQ,EANR,OAQOC,EAAcD,EAASE,KAE7BP,EAAgB,GAAD,mBAAKM,GAAL,CAAiBA,KAVjC,4CAN+B,sBAqB/B,OACE,qCACE,qBAAKE,IAAKC,EAAMC,IAAI,iBACpB,cAAC5B,EAAD,gDAGA,eAACG,EAAD,CAAM0B,SA3BqB,4CA2B3B,UACE,uBAAOC,YAAY,kCACjBC,MAAOhB,EACPiB,SAAU,SAAAC,GAAC,OAAGjB,EAAWiB,EAAEC,OAAOH,UAEpC,wBAAQI,KAAK,SAAb,0BAGF,cAAC7B,EAAD,UACGW,EAAcmB,KAAI,SAAAC,GAAW,OAC1B,oBAA+BC,KAAK,QAApC,UACA,qBAAKZ,IAAKW,EAAYE,MAAMC,WAAYZ,IAAI,YAC5C,gCACE,iCAASS,EAAYI,YACrB,4BAAIJ,EAAYK,iBAGlB,cAAClC,EAAD,UACC,cAAC,IAAD,CAAgBmC,KAAM,SARfN,EAAYI,oBC9CjBG,EATc,WAI3B,OAAO,6CCYMC,EAbU,kBAGvB,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWnC,IACjC,cAAC,IAAD,CAAOiC,KAAK,cAAcE,UAAWJ,QCK1BK,EATO,kBACpB,qCACE,cAAC,IAAD,UACE,cAAC,EAAD,MAEJ,cAAC,EAAD,QCTFC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f32c99e4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/git-background.7fa45dda.svg\";","import { createGlobalStyle} from 'styled-components'\n\nimport git from '../assets/git-background.svg'\n\nexport default createGlobalStyle`\n  *{\n    margin:0;\n    padding:0;\n    outline:0;\n    box-sizing: border-box;\n\n  }\n\n  body{\n    background: #F0F0F0 url(${git}) no-repeat 70% top;\n   \n  }\n\n\n  body, input, button{\n    font: 16px sans-serif\n  }\n\n  #root {\n    max-width: 960px;\n    margin: 0 auto;\n    padding: 40px 20px\n  }\n\n\n  button{\n\n    cursor:pointer\n  }\n\n`","import styled from 'styled-components'\nimport { shade } from 'polished'\n\n\n export const Title = styled.h1`\n\n  font-size: 48px;\n  color: #3A3A3A;  \n  margin-top: 80px;\n  line-height: 56px;\n  max-width: 500px;\n\n`\n\n\nexport const Form = styled.form`\n\n  margin-top:40px;\n  max-width: 700px;\n  display:flex;\n\n  input{\n    flex:1;\n    height: 70px;\n    padding: 0 24px;\n    border:0;\n    border-radius: 5px 0 0 5px;\n    color: #3a3a3a;\n\n    &::placeholder{\n\n      color: #a8a8b3;\n\n    }\n    \n  }\n\n  button{\n    width: 210px;\n    border-radius: 0 5px 5px 0;\n    background-color: #04d361;\n    height: 70px;\n    border:0;\n    color: #fff;\n    font-weight: bold;\n    transition: background-color 0.2s;\n\n\n    &:hover{\n      background:${shade(0.2, '#04d361')}\n\n    }\n\n\n  }\n`\n\nexport const Repositories = styled.div`\n\n  display: flex;\n  flex-direction: column;\n  margin-top: 80px;\n  max-width: 700px;\n\n  a{\n    background: #fff;\n    border-radius: 6px;\n    width: 100%;\n    padding: 24px;\n    display: block;\n    text-decoration: none;\n    display: flex;\n    align-items: center;\n    transition: transform 0.2s;\n\n    & + a {\n      margin-top: 16px\n    }\n\n      img{\n      width: 64px;\n      height: 64px;\n      border-radius: 50%;\n\n\n    }\n\n    div{\n      margin-left: 16px;\n\n\n      strong{\n        font-size: 20px;\n        color: #3D3D4D;\n      }\n\n      p{\n\n        font-size: 18px;\n        color: #a8a8b3;\n        margin-top: 4px;\n\n      }\n\n\n    }\n\n    &:hover{\n      transform: translateX(10px)\n\n    }\n\n  }\n\n\n  \n\n`\n\nexport const Icondiv = styled.div`\n\n  padding-left: 100px;\n  color: #3D3D4D;\n\n`","import axios from 'axios'\n\n\nconst api = axios.create({\n\n  baseURL: 'http://api.github.com/'\n\n})\n\n\nexport default api","export default __webpack_public_path__ + \"static/media/logo.469cc31b.svg\";","import React, {useState, FormEvent} from 'react';\nimport {Title, Form, Repositories, Icondiv } from './styles'\nimport { FiChevronRight } from 'react-icons/fi'\n\nimport api from '../../services/api'\n\nimport logo from '../../assets/logo.svg'\n\n\n\n\ninterface Repository {\n\n  full_name: string;\n  description: string;\n  ownew:{\n    login:string;\n    avatar_url: string;\n  }\n\n}\n\nconst Dashboard: React.FC = () =>{\n\n\n  const [newRepo, setNewRepo] = useState('')\n  const [respositories, setRepositories] = useState<Repository[]>([])\n\n  async function handleAddRepository(event: FormEvent<HTMLFormElement>): Promise<void>{\n\n\n   event.preventDefault()\n    \n\n    const response = await api.get(`repos/${newRepo}`);\n\n   const repository =  response.data;\n\n   setRepositories([...repository, repository])\n\n\n  }\n\n  return (\n    <>\n      <img src={logo} alt=\"git explorer\"/>\n      <Title>Explore repositórios no Github</Title>\n     \n\n      <Form onSubmit={handleAddRepository}>\n        <input placeholder=\"Digite o nome do repositório\"\n          value={newRepo}\n          onChange={e=> setNewRepo(e.target.value)}\n        />\n        <button type=\"submit\">Pesquisar</button>\n      </Form>\n\n      <Repositories>\n        {respositories.map(resposiroty=>(\n            <a key={resposiroty.full_name} href=\"teste\">\n            <img src={resposiroty.ownew.avatar_url} alt=\"eduardo\"/>\n            <div>\n              <strong>{resposiroty.full_name}</strong>\n              <p>{resposiroty.description}</p>\n            </div>\n  \n            <Icondiv>\n             <FiChevronRight size={20}/>\n            </Icondiv>\n            \n          </a>\n\n\n        ))}\n  \n\n     \n\n      </Repositories>\n    </>\n  )\n}\n\n\nexport default Dashboard\n","import React from 'react';\n\n\n\nconst Repository: React.FC = () =>{\n\n\n\n  return <h1>Reposiroty</h1>\n\n}\n\n\nexport default Repository\n","import React from 'react';\nimport { Switch, Route} from 'react-router-dom'\n\nimport Dashboard from '../pages/Dashboard'\nimport Repository from '../pages/Repository'\n\n\nconst Routes: React.FC = () =>(\n\n\n  <Switch>\n    <Route path=\"/\" exact component={Dashboard}/>\n    <Route path=\"/repository\" component={Repository}/>\n   \n  </Switch>\n\n\n)\n\n\nexport default Routes","import React from 'react';\nimport {BrowserRouter} from 'react-router-dom'\n\nimport GlobalStyle from './styles/global'\n\nimport Routes from './routes'\n\n\nconst App: React.FC = () => (\n  <>\n    <BrowserRouter>\n      <Routes/>\n    </BrowserRouter>\n  <GlobalStyle/>\n  </>\n)\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}